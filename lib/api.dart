import 'dart:developer';
import 'dart:io';

String getComputerName() {
  return Platform.environment['COMPUTERNAME'] ?? 'Unknown';
}

/// [Endpoint] enum contains the API Path
enum Endpoint {
  ledgerAccount,
  ledgerAccountByInitial,
  getAccountGroupDropData,
  getDisplayGroupDropData,
  getBSScheduleData,
  getAccountListDropData,
  getMetalGroupData,
  getAccountDetailsData,
  getPAccounts,
  getSAccounts,
  getStoneGroupData,
  getOpeningStockList,
  getMetalOpeningStockList,
  getStonePacketList,
  getStonePacketsData,
  getStonePacket,
  getSieveListData,
  getStoneQualities,
  getStoneColors,
  getStoneShapes,
  getDashboardStockSummaryData,
  getCrmEventData,
  getMetalLotList,
  ledgerAccountOpeningBalance,
  getMetalAccountOpening,
  getStoneAccountOpening,
  getMetalLotsData,
  getMetalLot,
  stockItemDataList,
  stockDesignDataList,
  designCategoryList,
  singleSalesEndpoint,
  singleSalesEndpointList,
  getByInvoiceNoSingleSales,
  estimateEndpoint,
  estimateEndpointList,
  getByInvoiceNoEstimate,
  approvalInvoiceEndpoint,
  approvalInvoiceEndpointList,
  inventoryCategoryList,
  inventoryStockSectionList,
  inventoryCounterList,
  inventoryCollectionList,
  inventoryDataList,
  looseMetalSalesCreation,
  looseMetalSalesCreationList,
  accountExists,
  bssExists,
  singleSalesEndpointNextInvoiceNo,
  approvalInvoiceEndpointNextInvoiceNo,
  estimateEndpointNextInvoiceNo,
  looseMetalSalesCreationNextInvoiceNo,
  fyYearList,
  salesValueMonthWise,
  getPreSetFile,
  savePresetFile,
  preSetFileGroupRateList,
  getJewelleyCrationListData,
  getTrailBalanceList,
  stonesubGroupList,
  stoneLotColor,
  stoneLotQuality,
  stoneLotShape,
  getSalesValueDateWise,
  inventoryPurityWise,
  inventoryCounterWise,
  sieveMasterCreate,
  transactionHistory,
  cashBankTransactionList,
  nextCashBankTransactionList,
  createCashBookTransaction,
  getStockSummaryListData,
  getStockSummaryLotWiseData,
  getStatusListData,
  stockDataBySubCategory,
  stockDataByInitial,
  cashBankTransactionBookAccList,
  updateCompanyDetails,
  getDigitalAlbumListData,
  studdedStockData,
  subLotData,
  login,
  createPurchaseIvoice,
  purchaseInvoiceList,
  productMaster,
  productMasterList,
  salesInvoiceExists,
  nextJewelleryPurchaseInv,
  checkIfJewelleryPurchaseInvExists,
  prefixMaster,
  countryMaster,
  accountGroupMaster,
  displayGroupMaster,
  teamLeaderMaster,
  salesPersonMaster,
  currencyMaster,
  counterMaster,
  collectionMaster,
  brandMaster,
  purityMaster,
  checkIfTransEntryExists,
  labelCreationPurchaseList,
  labelCreationApprovalList,
  labelCreationPurchaseItemDetails,
  purchaseReport,
  salesReport,
  jewelSubCategory,
  jewellarySalesRegisterReport,
  jewellaryPurchaseRegisterReport,
  estimateList,
  estimateDetails,
  nextEstimateInv,
  estimateInvoice,
  checkIfEstimateInvoiceExists,
  barcodeLabel,
  singleBarcodeLabel,
  colourMaster,
  shapeMaster,
  qualityMaster,
  looseMetalSalesCreationListNew,
  checkIfMetalTranxInvoiceExists,
  jewellerySaleItemWiseDetailedReport,
  nextJVNo,
  jvEntry,
  jvEntryList,
  order,
  orderList,
  checkOrdExists,
  nextOrderNo,
  nextAdvVchNo,
  checkIfAdvVchExists,
  custAdvVch,
  baccounts,
  custAdvVchList,
  orderReviewList,
  orderItem,
  stoneTranx,
  stoneTranxList,
  nextStoneTranxInv,
  checkIfStoneTranxInvExists,
  mColor,
  metalTrnReportList,
  jobBagList,
  orderStatusCount,
  jobCreation,
  orderItemDetails,
  stoneTrnReportList,
  mxStnList,
  metalTransactionReport,
  jobAllocation,
  companyList,
  newUser,
  users,
  role,
  branchDetails,
  nextMxStnVch,
  mxStnVch,
  jobAllotment,
  jobStatusList,
  jobIssue,
  getFactJobIssueData,
  nextJSRInv,
  checkIfJSRInvoiceExists,
  jsrInvoiceList,
  jsrInvoiceDetails,
  jsrItemList,
  jsrInvoice,
  jprItemList,
  custStockRpt,
  jobListByWorker,
  metalIssue,
  metalIssueList,
  nextMetalIssueVchNo,
  checkIfApprovalGivenExists,
  nextStoneIssueVchNo,
  stoneIssue,
  stoneIssueList,
  jewellerySaleReturnReport,
  jewelleryApprovalGivenReport,
  jewellerySalesReturnRegisterReport,
  jewelleryApprovalGivenRegisterReport,
  stoneIssueReceiptList,
  splitItemEntry,
  branchList,
  branchAccounts,
  stkTrf,
  jobReceiptDetails,
  jobReceipt,
  jobReceiptList,
  nextJobReceiptVchNo,
  labelCreationProductionList,
  itemSub,
  stkTrfRtpList,
  todo,
  jobPrdItemStatus,
  markAsComplete,
  stkTrfCnfList,
  stkCnf,
  stkTrfList,
  stkTrfRjct,
  jpStkHistory,
  labelCreationChecklist,
  verifyPassword,
  updatePassword,
  jsaleItemImageReport,
  stnIssueCheckList,
  demandList,
  metalIssueCheckList,
  custAdvVchAdjList,
  jewelleryStockSplitEntry,
  jewellerySplitChecklist,
  jewelleryStockMergeEntry,
  dayBookTrn,
  jAprTakenInvoice,
  nextJewelleryAprTakenInv,
  checkIfJewelleryAprTakenInvExists,
  jewelleryAprTakenInvoice,
  jewelleryAprTakenInvoiceList,
  jewelleryApprovalTakenReport,
  wipReport,
  rcdReport,
  wipMetalChecklist,
  stnLedger,
  mtlLedger,
  stockData,
  mtlTrlBl,
  conciseStockData,
  conciseStockDataByTag,
  stkRepair,
  nxtRepairVchNo,
  stkRepairList,
  dlyJwlStkRpt,
  jobBybag,
  jobBagListByWorker,
  labelCreationSalesReturnList,
  jSRtnItemDetails,
  labelCreationRepairList,
  jsaleOsList,
  osOutDues,
  schemeMaster,
  chitMaster,
  chitMasterVchNo,
  chitMasterList,
  chitMasterByVch,
  chitMasterByCode,
  chitMasterChecklist,
  chitMasterDataForTrnx,
  chitTrnVchNo,
  chitTrnx,
  chitTrnxList,
  chitTrnxByVch,
  chitTrnxByCode,
  chitTrnxChecklist,
  chitTrnxListForBarcode,
  removeLabel,
  dayBookAccTrn,
  jcDsgPath,
  chitStl,
  nextStlNo,
  chitStlList,
  chitStlChecklist,
  nextMtlIssVch,
  mltIssVch,
  mltIssList,
  nextRcdVch,
  mltRcdVch,
  mltRcdList,
  mltIssListForRcd,
  mltIssRpt,
  mltRcdRpt,
  checkIfTagExists,
  dlyMtlStkRpt,
  dlyMtlStkRptTrnx,
  dlyStnStkRpt,

  //* R Endpoints
  accountTranxHistoryR,
}

class API {

  Future<Map<String, String>> getHeaders() async {
    try {
      final dbName = "GJDATA150525";


      log('dbname header: $dbName');
      return {
        'Content-Type': 'application/json',
        'dbname': dbName,
      };
    } catch (e) {
      log('Error in getHeaders: $e');
      log('Error in getHeaders: $e');
    }
    return {};
  }

  String host = "192.168.1.3";
  String cid = "GJ";

  /// Endpoint Uri
  Uri endpointUri(
      Endpoint endpoint, {
        String prefix = '/api/v1',
        // List<String> pathSegments = const <String>[],
        Map<String, String>? queryParameters,
      }) {
    return Uri(
      scheme: 'http',
      host: host,
      port: 8000,
      path: '$prefix${_path[endpoint]}',
      queryParameters: queryParameters ?? {'cid': cid},
    );
  }

  /// Make sure the path should have the '/' prefix always
  /// when mapping endpoints
  static const Map<Endpoint, String> _path = <Endpoint, String>{
    // Master
    Endpoint.ledgerAccount: '/master/account',
    Endpoint.ledgerAccountByInitial: '/master/ledgerAccountByInitial',
    Endpoint.getMetalGroupData: '/master/metalMaster',
    Endpoint.getAccountDetailsData: '/master/accounts',
    Endpoint.getStoneGroupData: '/master/stoneMaster',
    Endpoint.getStonePacketsData: '/master/stonePackets',
    Endpoint.getStonePacket: '/master/stonePacket',
    Endpoint.getSieveListData: '/master/sieveList',
    Endpoint.stockItemDataList: '/master/stockDataList',
    Endpoint.designCategoryList: '/master/categoryList',
    Endpoint.getStoneQualities: '/master/stoneQualities',
    Endpoint.getStoneColors: '/master/stoneColors',
    Endpoint.getStoneShapes: '/master/stoneShapes',
    Endpoint.getMetalLotsData: '/master/metalLots',
    Endpoint.getMetalLot: '/master/metalLot',
    Endpoint.accountExists: '/master/accountExists',
    Endpoint.bssExists: '/master/bssExists',
    Endpoint.getJewelleyCrationListData: '/master/newJCList',
    Endpoint.getTrailBalanceList: '/master/trialBalance',
    Endpoint.stonesubGroupList: "/master/stoneSubGroups",
    Endpoint.stoneLotColor: "/master/stoneColor",
    Endpoint.stoneLotQuality: "/master/stoneQuality",
    Endpoint.stoneLotShape: "/master/stoneShape",
    Endpoint.sieveMasterCreate: "/master/sieveMaster",
    Endpoint.subLotData: "/master/subLots",
    Endpoint.prefixMaster: "/master/prefixMaster",
    Endpoint.countryMaster: "/master/countryMaster",
    Endpoint.accountGroupMaster: "/master/accountGroup",
    Endpoint.displayGroupMaster: "/master/displayGroup",
    Endpoint.schemeMaster: "/master/schemeMaster",
    Endpoint.teamLeaderMaster: "/master/teamLeader",
    Endpoint.salesPersonMaster: "/master/salesperson",
    Endpoint.currencyMaster: "/master/currency",
    Endpoint.counterMaster: "/master/counter",
    Endpoint.collectionMaster: "/master/collection",
    Endpoint.brandMaster: "/master/brand",
    Endpoint.purityMaster: "/master/purity",
    Endpoint.jewelSubCategory: "/master/jewelSubCategory",
    Endpoint.colourMaster: "/master/stoneColors",
    Endpoint.shapeMaster: "/master/stoneShapes",
    Endpoint.qualityMaster: "/master/stoneQualities",
    Endpoint.mColor: "/master/mColor",
    Endpoint.custStockRpt: "/master/custStockRpt",

    //shared
    Endpoint.getAccountGroupDropData: '/shared/accountGroup',
    Endpoint.getDisplayGroupDropData: '/shared/displayGroup',
    Endpoint.getBSScheduleData: '/shared/bsschedule',
    Endpoint.getAccountListDropData: '/shared/accountList',
    Endpoint.getPAccounts: '/shared/paccounts',
    Endpoint.getSAccounts: '/shared/saccounts',
    Endpoint.getDashboardStockSummaryData: '/shared/dashStockSummary',
    Endpoint.getCrmEventData: '/shared/crmEvents',
    Endpoint.getOpeningStockList: '/master/stoneOpening',
    Endpoint.getMetalOpeningStockList: '/master/metalOpening',
    Endpoint.getMetalLotList: '/master/metalLots',
    Endpoint.getStonePacketList: '/master/stonePackets',
    Endpoint.ledgerAccountOpeningBalance: '/master/accountOpening',
    Endpoint.getMetalAccountOpening: '/master/accountMetalOpening',
    Endpoint.getStoneAccountOpening: '/master/accountStoneOpening',
    Endpoint.stockDesignDataList: '/shared/designList',
    Endpoint.singleSalesEndpoint: '/account/salesInvoice',
    Endpoint.singleSalesEndpointList: '/account/invoiceList',
    Endpoint.getByInvoiceNoSingleSales: '/account/invoiceDetails',
    Endpoint.estimateEndpoint: '/account/estimateInvoice',
    Endpoint.estimateEndpointList: '/account/estimateList',
    Endpoint.getByInvoiceNoEstimate: '/account/estimateDetails',
    Endpoint.approvalInvoiceEndpoint: '/account/approvalInvoice',
    Endpoint.approvalInvoiceEndpointList: '/account/approvalList',
    Endpoint.checkIfApprovalGivenExists: "/account/checkIfApprovalGivenExists",
    Endpoint.inventoryCategoryList: '/shared/categoryList',
    Endpoint.inventoryStockSectionList: '/shared/stkSectionList',
    Endpoint.inventoryCounterList: '/shared/counterList',
    Endpoint.inventoryCollectionList: '/shared/stkCollectionList',
    Endpoint.inventoryDataList: '/master/stockSummary',
    Endpoint.looseMetalSalesCreation: '/account/metalTranx',
    Endpoint.looseMetalSalesCreationList: '/account/metalTranxList',
    Endpoint.singleSalesEndpointNextInvoiceNo: '/account/nextSaleInv',
    Endpoint.approvalInvoiceEndpointNextInvoiceNo: '/account/nextApprovalInv',
    Endpoint.estimateEndpointNextInvoiceNo: '/account/nextEstimateInv',
    Endpoint.looseMetalSalesCreationNextInvoiceNo: '/account/nextMetalTrnxInv',
    Endpoint.fyYearList: '/shared/fayearList',
    Endpoint.salesValueMonthWise: '/shared/salesValueMonthWise',
    Endpoint.getPreSetFile: '/master/presetList',
    Endpoint.savePresetFile: '/master/presetFile',
    Endpoint.preSetFileGroupRateList: '/master/stoneSubGroups',
    Endpoint.transactionHistory: '/account/accountTranxHistory',
    Endpoint.getStatusListData: '/shared/statusList',
    Endpoint.getSalesValueDateWise: '/shared/salesValueDateWise',
    Endpoint.checkIfTransEntryExists: '/shared/transExists',
    Endpoint.baccounts: "/shared/baccounts",
    Endpoint.branchAccounts: "/shared/branchAccounts",

    // inventry
    Endpoint.getStockSummaryListData: '/inventory/newStockCategorySummary',
    Endpoint.getStockSummaryLotWiseData: '/inventory/newStockSummaryLotWise',
    Endpoint.cashBankTransactionList: '/account/cashBankTranxList',
    Endpoint.nextCashBankTransactionList: '/account/nextCashBankInv',
    Endpoint.createCashBookTransaction: '/account/cashBookEntry',
    Endpoint.inventoryPurityWise: '/inventory/inventoryPurityWise',
    Endpoint.inventoryCounterWise: '/inventory/inventoryCounterWise',
    Endpoint.stockDataBySubCategory: '/inventory/stockDataBySubCategory',
    Endpoint.stockDataByInitial: '/inventory/stockDataByInitial',
    Endpoint.cashBankTransactionBookAccList: '/account/cashBankAccs',
    Endpoint.updateCompanyDetails: '/companyDetails',
    Endpoint.getDigitalAlbumListData: '/shared/transList',
    Endpoint.labelCreationPurchaseList: "/inventory/labelCreationPurchaseList",
    Endpoint.labelCreationApprovalList: "/inventory/labelCreationApprovalList",
    Endpoint.labelCreationPurchaseItemDetails: "/inventory/itemDetails",
    Endpoint.barcodeLabel: "/inventory/barcodeLabel",
    Endpoint.singleBarcodeLabel: "/inventory/singleBarcodeLabel",
    Endpoint.splitItemEntry: "/inventory/splitItemEntry",
    Endpoint.labelCreationProductionList:
    "/inventory/labelCreationProductionList",
    Endpoint.itemSub: "/inventory/itemSub",
    Endpoint.labelCreationChecklist: "/inventory/labelCreationChecklist",
    Endpoint.jewelleryStockSplitEntry: "/inventory/jewelleryStockSplitEntry",
    Endpoint.jewellerySplitChecklist: "/inventory/jewellerySplitChecklist",
    Endpoint.jewelleryStockMergeEntry: "/inventory/jewelleryStockMergeEntry",
    Endpoint.stockData: "/inventory/stockData",
    Endpoint.conciseStockData: "/inventory/conciseStockData",
    Endpoint.conciseStockDataByTag: "/inventory/conciseStockDataByTag",
    Endpoint.dlyJwlStkRpt: "/inventory/dlyJwlStkRpt",
    Endpoint.labelCreationSalesReturnList:
    "/inventory/labelCreationSalesReturnList",
    Endpoint.jSRtnItemDetails: "/inventory/jSRtnItemDetails",
    Endpoint.labelCreationRepairList: "/inventory/labelCreationRepairList",
    Endpoint.removeLabel: "/inventory/removeLabel",
    Endpoint.jcDsgPath: "/inventory/jcDsgPath",
    Endpoint.nextMtlIssVch: "/inventory/nextMltIssVch",
    Endpoint.mltIssVch: "/inventory/mltIssVch",
    Endpoint.mltIssList: "/inventory/mltIssueList",
    Endpoint.nextRcdVch: "/inventory/nextRcdVch",
    Endpoint.mltRcdVch: "/inventory/mltRcdVch",
    Endpoint.mltRcdList: "/inventory/mltRcdList",
    Endpoint.mltIssListForRcd: "/inventory/mltIssListForRcd",
    Endpoint.mltIssRpt: "/inventory/mltIssRpt",
    Endpoint.mltRcdRpt: "/inventory/mltRcdRpt",
    Endpoint.checkIfTagExists: "/inventory/checkIfTagExists",
    Endpoint.dlyMtlStkRpt: "/inventory/dlyMtlStkRpt",
    Endpoint.dlyMtlStkRptTrnx: "/inventory/dlyMtlStkRptTrnx",
    Endpoint.dlyStnStkRpt: "/inventory/dlyStnStkRpt",

    // account
    Endpoint.studdedStockData: '/account/studdedStockData',
    Endpoint.login: '/getCompanyList',
    Endpoint.createPurchaseIvoice: '/account/purchaseInvoice',
    Endpoint.purchaseInvoiceList: '/account/purchaseInvoiceList',
    Endpoint.salesInvoiceExists: '/account/checkIfJewellerySalesInvoiceExists',
    Endpoint.nextJewelleryPurchaseInv: '/account/nextJewelleryPurchaseInv',
    Endpoint.checkIfJewelleryPurchaseInvExists:
    '/account/checkIfJewelleryPurchaseInvExists',
    Endpoint.purchaseReport: "/account/jewelleryPurchaseReport",
    Endpoint.salesReport: "/account/jewellerySaleReport",
    Endpoint.jewellarySalesRegisterReport:
    "/account/jewellerySalesRegisterReport",
    Endpoint.jewellaryPurchaseRegisterReport:
    "/account/jewelleryPurchaseRegisterReport",
    Endpoint.estimateDetails: "/account/estimateDetails",
    Endpoint.estimateList: "/account/estimateList",
    Endpoint.nextEstimateInv: "/account/nextEstimateInv",
    Endpoint.estimateInvoice: "/account/estimateInvoice",
    Endpoint.checkIfEstimateInvoiceExists:
    "/account/checkIfEstimateInvoiceExists",
    Endpoint.jewellerySaleItemWiseDetailedReport:
    "/account/jewellerySaleItemWiseDetailedReport",
    Endpoint.looseMetalSalesCreationListNew: '/account/metalTranxSalesList',
    Endpoint.checkIfMetalTranxInvoiceExists:
    '/account/checkIfMetalTranxInvoiceExists',
    Endpoint.nextJVNo: "/account/nextJVNo",
    Endpoint.jvEntry: "/account/jvEntry",
    Endpoint.jvEntryList: "/account/jvEntryList",
    Endpoint.stoneTranx: "/account/stoneTranx",
    Endpoint.stoneTranxList: "/account/stoneTranxList",
    Endpoint.nextStoneTranxInv: "/account/nextStoneTranxInv",
    Endpoint.checkIfStoneTranxInvExists: "/account/checkIfStoneTranxInvExists",
    Endpoint.metalTrnReportList: "/account/metalTrnReportList",
    Endpoint.nextJSRInv: "/account/nextJSRInv",
    Endpoint.jsrInvoiceList: "/account/jsrInvoiceList",
    Endpoint.jsrInvoiceDetails: "/account/jsrInvoiceDetails",
    Endpoint.checkIfJSRInvoiceExists: "/account/checkIfJSRInvoiceExists",
    Endpoint.jsrItemList: "/account/jsrItemList",
    Endpoint.jsrInvoice: "/account/jsrInvoice",
    Endpoint.jprItemList: "/account/jprItemList",
    Endpoint.jewellerySaleReturnReport: "/account/jewellerySaleReturnReport",
    Endpoint.jewelleryApprovalGivenReport:
    "/account/jewelleryApprovalGivenReport",
    Endpoint.jewellerySalesReturnRegisterReport:
    "/account/jewellerySalesReturnRegisterReport",
    Endpoint.jewelleryApprovalGivenRegisterReport:
    "/account/jewelleryApprovalGivenRegisterReport",
    Endpoint.jpStkHistory: "/account/jpStkHistory",
    Endpoint.jsaleItemImageReport: "/account/jsaleItemImageReport",
    Endpoint.custAdvVchAdjList: "/account/custAdvVchAdjList",
    Endpoint.dayBookTrn: "/account/dayBookTrn",
    Endpoint.dayBookAccTrn: "/account/dayBookAccTrn",
    Endpoint.jAprTakenInvoice: "/account/jAprTakenInvoice",
    Endpoint.nextJewelleryAprTakenInv: "/account/nextJewelleryAprTakenInv",
    Endpoint.checkIfJewelleryAprTakenInvExists:
    "/account/checkIfJewelleryAprTakenInvExists",
    Endpoint.jewelleryAprTakenInvoice: "/account/jewelleryAprTakenInvoice",
    Endpoint.jewelleryAprTakenInvoiceList:
    "/account/jewelleryAprTakenInvoiceList",
    Endpoint.jewelleryApprovalTakenReport:
    "/account/jewelleryApprovalTakenReport",
    Endpoint.jsaleOsList: "/account/jsaleOsList",
    Endpoint.osOutDues: "/account/osOutDues",
    Endpoint.chitMaster: "/account/chitMaster",
    Endpoint.chitMasterVchNo: "/account/chitMasterVchNo",
    Endpoint.chitMasterList: "/account/chitMasterList",
    Endpoint.chitMasterByVch: "/account/chitMasterByVch",
    Endpoint.chitMasterByCode: "/account/chitMasterByCode",
    Endpoint.chitMasterChecklist: "/account/chitMasterChecklist",
    Endpoint.chitMasterDataForTrnx: "/account/chitMasterDataForTrnx",
    Endpoint.chitTrnVchNo: "/account/chitTrnxVchNo",
    Endpoint.chitTrnx: "/account/chitTrnx",
    Endpoint.chitTrnxList: "/account/chitTrnxList",
    Endpoint.chitTrnxByVch: "/account/chitTrnxByVch",
    Endpoint.chitTrnxByCode: "/account/chitTrnxByCode",
    Endpoint.chitTrnxChecklist: "/account/chitTrnxChecklist",
    Endpoint.chitTrnxListForBarcode: "/account/chitTrnxListForBarcode",
    Endpoint.chitStl: "/account/chitStl",
    Endpoint.nextStlNo: "/account/nextStlNo",
    Endpoint.chitStlList: "/account/chitStlList",
    Endpoint.chitStlChecklist: "/account/chitStlChecklist",

    //stone sales
    Endpoint.stoneTrnReportList: "/account/stoneTrnReportList",
    Endpoint.metalTransactionReport: "/account/metalTransactionReport",

    // production
    Endpoint.productMaster: "/production/productMaster",
    Endpoint.productMasterList: "/production/productMasterList",
    Endpoint.order: "/production/order",
    Endpoint.orderList: "/production/orderList",
    Endpoint.checkOrdExists: "/production/checkOrdExists",
    Endpoint.nextOrderNo: "/production/nextOrderNo",
    Endpoint.orderReviewList: "/production/orderReviewList",
    Endpoint.orderItem: "/production/orderItem",
    Endpoint.jobBagList: "/production/jobBagList",
    Endpoint.orderItemDetails: "/production/orderItemDetails",
    Endpoint.orderStatusCount: "/production/orderStatusCount",
    Endpoint.jobCreation: "/production/jobCreation",
    Endpoint.jobAllocation: "/production/jobAllocation",
    Endpoint.jobAllotment: "/production/jobAllotment",
    Endpoint.jobStatusList: "/production/jobStatusList",
    Endpoint.jobIssue: "/production/jobIssue",
    Endpoint.getFactJobIssueData: "/production/getFactJobIssueData",
    Endpoint.jobListByWorker: "/production/jobListByWorker",
    Endpoint.metalIssue: "/production/metalIssue",
    Endpoint.metalIssueList: "/production/metalIssueList",
    Endpoint.nextMetalIssueVchNo: "/production/nextMetalIssueVchNo",
    Endpoint.nextStoneIssueVchNo: "/production/nextStoneIssueVchNo",
    Endpoint.stoneIssue: "/production/stoneIssue",
    Endpoint.stoneIssueList: "/production/stoneIssueList",
    Endpoint.stoneIssueReceiptList: "/production/stoneIssueReceiptList",
    Endpoint.jobReceiptDetails: "/production/jobReceiptDetails",
    Endpoint.jobReceipt: "/production/jobReceipt",
    Endpoint.jobReceiptList: "/production/jobReceiptList",
    Endpoint.nextJobReceiptVchNo: "/production/nextJobReceiptVchNo",
    Endpoint.jobPrdItemStatus: "/production/jobPrdItemStatus",
    Endpoint.stnIssueCheckList: "/production/stnIssueCheckList",
    Endpoint.demandList: "/production/demandList",
    Endpoint.metalIssueCheckList: "/production/metalIssueCheckList",
    Endpoint.wipReport: "/production/wipReport",
    Endpoint.rcdReport: "/production/rcdReport",
    Endpoint.wipMetalChecklist: "/production/wipMetalChecklist",
    Endpoint.stnLedger: "/production/stnLedger",
    Endpoint.mtlLedger: "/production/mtlLedger",
    Endpoint.mtlTrlBl: "/production/mtlTrlBl",
    Endpoint.jobBybag: "/production/jobBybag",
    Endpoint.jobBagListByWorker: "/production/jobBagListByWorker",

    //* Showroom accounts
    Endpoint.nextAdvVchNo: "/showroom/nextAdvVchNo",
    Endpoint.checkIfAdvVchExists: "/showroom/checkIfAdvVchExists",
    Endpoint.custAdvVch: "/showroom/custAdvVch",
    Endpoint.custAdvVchList: "/showroom/custAdvVchList",

    //* Auth
    Endpoint.companyList: "/companyList",
    Endpoint.newUser: "/newuser",
    Endpoint.users: "/users",
    Endpoint.role: "/role",
    Endpoint.branchDetails: "/branchDetails",
    Endpoint.branchList: "/branchList",
    Endpoint.todo: "/todo",
    Endpoint.markAsComplete: "/markAsComplete",
    Endpoint.verifyPassword: "/verifyPassword",
    Endpoint.updatePassword: "/updatePassword",

    //* BrnTrf
    Endpoint.stkTrf: "/brnTrf/stkTrf",
    Endpoint.stkTrfRtpList: "/brnTrf/stkTrfRtpList",
    Endpoint.stkTrfCnfList: "/brnTrf/stkTrfCnfList",
    Endpoint.stkCnf: "/brnTrf/stkCnf",
    Endpoint.stkTrfList: "/brnTrf/stkTrfList",
    Endpoint.stkTrfRjct: "/brnTrf/stkTrfRjct",

    //* Repair
    Endpoint.stkRepair: "/repair/stkRepair",
    Endpoint.nxtRepairVchNo: "/repair/nxtRepairVchNo",
    Endpoint.stkRepairList: "/repair/stkRepairList",

    //* R Endpoints
    Endpoint.accountTranxHistoryR: "/account/accountTranxHistoryR",

    // mixing
    Endpoint.nextMxStnVch: "/inventory/nextMxStnVch",
    Endpoint.mxStnVch: "/inventory/mxStnVch",
    Endpoint.mxStnList: "/inventory/mxStnList",
  };
}
